22 serialization::archive 17 0 0 0 0 39 /usr/home/jlhawkwell/Projects/klaculate 39 /usr/home/jlhawkwell/Projects/klaculate 0 0 1464 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 16 "OutputHelper.h" 1 10 1 26 18446744073709551615 1 # 3 1 3 2 18446744073709551615 7 include 3 2 3 9 18446744073709551615 1 < 3 10 3 11 18446744073709551615 5 regex 3 11 3 16 18446744073709551615 1 > 3 16 3 17 18446744073709551615 1 # 4 1 4 2 18446744073709551615 7 include 4 2 4 9 18446744073709551615 1 < 4 10 4 11 18446744073709551615 7 fstream 4 11 4 18 18446744073709551615 1 > 4 18 4 19 18446744073709551615 1 # 5 1 5 2 18446744073709551615 7 include 5 2 5 9 18446744073709551615 1 < 5 10 5 11 18446744073709551615 7 sstream 5 11 5 18 18446744073709551615 1 > 5 18 5 19 18446744073709551615 1 # 7 1 7 2 18446744073709551615 7 include 7 2 7 9 18446744073709551615 1 < 7 10 7 11 18446744073709551615 3 sys 7 11 7 14 18446744073709551615 1 / 7 14 7 15 18446744073709551615 4 stat 7 15 7 19 18446744073709551615 1 . 7 19 7 20 18446744073709551615 1 h 7 20 7 21 18446744073709551615 1 > 7 21 7 22 18446744073709551615 9 namespace 9 1 9 10 18446744073709551615 4 util 9 11 9 15 0 1 { 9 16 9 17 18446744073709551615 4 void 11 2 11 6 18446744073709551615 10 replaceAll 11 7 11 17 1 1 ( 11 17 11 18 1 3 std 11 18 11 21 2 2 :: 11 21 11 23 18446744073709551615 6 string 11 23 11 29 3 1 & 11 29 11 30 18446744073709551615 3 str 11 31 11 34 4 1 , 11 34 11 35 1 5 const 11 36 11 41 18446744073709551615 3 std 11 42 11 45 2 2 :: 11 45 11 47 18446744073709551615 6 string 11 47 11 53 3 1 & 11 53 11 54 18446744073709551615 4 from 11 55 11 59 5 1 , 11 59 11 60 1 5 const 11 61 11 66 18446744073709551615 3 std 11 67 11 70 2 2 :: 11 70 11 72 18446744073709551615 6 string 11 72 11 78 3 1 & 11 78 11 79 18446744073709551615 2 to 11 80 11 82 6 1 ) 11 82 11 83 1 1 { 11 84 11 85 18446744073709551615 2 if 12 3 12 5 18446744073709551615 1 ( 12 6 12 7 18446744073709551615 4 from 12 7 12 11 5 1 . 12 11 12 12 7 5 empty 12 12 12 17 7 1 ( 12 17 12 18 7 1 ) 12 18 12 19 7 1 ) 12 19 12 20 18446744073709551615 1 { 12 21 12 22 18446744073709551615 6 return 13 4 13 10 18446744073709551615 1 ; 13 10 13 11 18446744073709551615 1 } 14 3 14 4 18446744073709551615 6 size_t 15 3 15 9 8 9 start_pos 15 10 15 19 9 1 = 15 20 15 21 18446744073709551615 1 0 15 22 15 23 18446744073709551615 1 ; 15 23 15 24 18446744073709551615 5 while 16 3 16 8 18446744073709551615 1 ( 16 9 16 10 18446744073709551615 1 ( 16 10 16 11 18446744073709551615 9 start_pos 16 11 16 20 9 1 = 16 21 16 22 18446744073709551615 3 str 16 23 16 26 4 1 . 16 26 16 27 10 4 find 16 27 16 31 10 1 ( 16 31 16 32 10 4 from 16 32 16 36 5 1 , 16 36 16 37 10 9 start_pos 16 38 16 47 9 1 ) 16 47 16 48 10 1 ) 16 48 16 49 18446744073709551615 2 != 16 50 16 52 18446744073709551615 3 std 16 53 16 56 2 2 :: 16 56 16 58 18446744073709551615 6 string 16 58 16 64 3 2 :: 16 64 16 66 18446744073709551615 4 npos 16 66 16 70 11 1 ) 16 70 16 71 18446744073709551615 1 { 16 72 16 73 18446744073709551615 3 str 17 4 17 7 4 1 . 17 7 17 8 12 7 replace 17 8 17 15 12 1 ( 17 15 17 16 12 9 start_pos 17 16 17 25 9 1 , 17 25 17 26 12 4 from 17 27 17 31 5 1 . 17 31 17 32 13 6 length 17 32 17 38 13 1 ( 17 38 17 39 13 1 ) 17 39 17 40 13 1 , 17 40 17 41 12 2 to 17 42 17 44 6 1 ) 17 44 17 45 12 1 ; 17 45 17 46 18446744073709551615 9 start_pos 18 4 18 13 9 2 += 18 14 18 16 18446744073709551615 2 to 18 17 18 19 6 1 . 18 19 18 20 13 6 length 18 20 18 26 13 1 ( 18 26 18 27 13 1 ) 18 27 18 28 13 1 ; 18 28 18 29 18446744073709551615 61 // In case 'to' contains 'from', like replacing 'x' with 'yx' 18 30 18 91 18446744073709551615 1 } 19 3 19 4 18446744073709551615 1 } 20 2 20 3 18446744073709551615 3 std 22 2 22 5 2 2 :: 22 5 22 7 14 6 string 22 7 22 13 3 11 html_escape 22 14 22 25 14 1 ( 22 25 22 26 14 5 const 22 26 22 31 18446744073709551615 3 std 22 32 22 35 2 2 :: 22 35 22 37 18446744073709551615 6 string 22 37 22 43 3 1 & 22 43 22 44 18446744073709551615 1 s 22 45 22 46 15 1 ) 22 46 22 47 14 1 { 22 48 22 49 18446744073709551615 3 std 23 3 23 6 2 2 :: 23 6 23 8 18446744073709551615 6 string 23 8 23 14 3 3 ret 23 15 23 18 16 1 ; 23 18 23 19 18446744073709551615 3 ret 24 3 24 6 16 1 . 24 6 24 7 17 7 reserve 24 7 24 14 17 1 ( 24 14 24 15 17 1 s 24 15 24 16 15 1 . 24 16 24 17 18 4 size 24 17 24 21 18 1 ( 24 21 24 22 18 1 ) 24 22 24 23 18 1 * 24 23 24 24 18446744073709551615 1 2 24 24 24 25 18446744073709551615 1 ) 24 25 24 26 17 1 ; 24 26 24 27 18446744073709551615 3 for 25 3 25 6 18446744073709551615 1 ( 25 7 25 8 18446744073709551615 5 const 25 8 25 13 18446744073709551615 4 auto 25 14 25 18 18446744073709551615 2 ch 25 19 25 21 19 1 : 25 22 25 23 20 1 s 25 24 25 25 15 1 ) 25 25 25 26 18446744073709551615 1 { 25 27 25 28 18446744073709551615 6 switch 26 4 26 10 18446744073709551615 1 ( 26 11 26 12 18446744073709551615 2 ch 26 12 26 14 19 1 ) 26 14 26 15 18446744073709551615 1 { 26 16 26 17 18446744073709551615 4 case 27 5 27 9 18446744073709551615 3 '&' 27 10 27 13 18446744073709551615 1 : 27 13 27 14 18446744073709551615 3 ret 28 6 28 9 16 1 . 28 9 28 10 21 6 append 28 10 28 16 21 1 ( 28 16 28 17 21 1 { 28 17 28 18 18446744073709551615 3 '&' 28 18 28 21 18446744073709551615 1 , 28 21 28 22 18446744073709551615 3 'a' 28 23 28 26 18446744073709551615 1 , 28 26 28 27 18446744073709551615 3 'm' 28 28 28 31 18446744073709551615 1 , 28 31 28 32 18446744073709551615 3 'p' 28 33 28 36 18446744073709551615 1 , 28 36 28 37 18446744073709551615 3 ';' 28 38 28 41 18446744073709551615 1 } 28 41 28 42 18446744073709551615 1 ) 28 42 28 43 21 1 ; 28 43 28 44 18446744073709551615 5 break 29 6 29 11 18446744073709551615 1 ; 29 11 29 12 18446744073709551615 4 case 30 5 30 9 18446744073709551615 4 '\"' 30 10 30 14 18446744073709551615 1 : 30 14 30 15 18446744073709551615 3 ret 31 6 31 9 16 1 . 31 9 31 10 21 6 append 31 10 31 16 21 1 ( 31 16 31 17 21 1 { 31 17 31 18 18446744073709551615 3 '&' 31 18 31 21 18446744073709551615 1 , 31 21 31 22 18446744073709551615 3 'q' 31 23 31 26 18446744073709551615 1 , 31 26 31 27 18446744073709551615 3 'u' 31 28 31 31 18446744073709551615 1 , 31 31 31 32 18446744073709551615 3 'o' 31 33 31 36 18446744073709551615 1 , 31 36 31 37 18446744073709551615 3 't' 31 38 31 41 18446744073709551615 1 , 31 41 31 42 18446744073709551615 3 ';' 31 43 31 46 18446744073709551615 1 } 31 46 31 47 18446744073709551615 1 ) 31 47 31 48 21 1 ; 31 48 31 49 18446744073709551615 5 break 32 6 32 11 18446744073709551615 1 ; 32 11 32 12 18446744073709551615 4 case 33 5 33 9 18446744073709551615 4 '\'' 33 10 33 14 18446744073709551615 1 : 33 14 33 15 18446744073709551615 3 ret 34 6 34 9 16 1 . 34 9 34 10 21 6 append 34 10 34 16 21 1 ( 34 16 34 17 21 1 { 34 17 34 18 18446744073709551615 3 '&' 34 18 34 21 18446744073709551615 1 , 34 21 34 22 18446744073709551615 3 'a' 34 23 34 26 18446744073709551615 1 , 34 26 34 27 18446744073709551615 3 'p' 34 28 34 31 18446744073709551615 1 , 34 31 34 32 18446744073709551615 3 'o' 34 33 34 36 18446744073709551615 1 , 34 36 34 37 18446744073709551615 3 's' 34 38 34 41 18446744073709551615 1 , 34 41 34 42 18446744073709551615 3 ';' 34 43 34 46 18446744073709551615 1 } 34 46 34 47 18446744073709551615 1 ) 34 47 34 48 21 1 ; 34 48 34 49 18446744073709551615 5 break 35 6 35 11 18446744073709551615 1 ; 35 11 35 12 18446744073709551615 7 default 36 5 36 12 18446744073709551615 1 : 36 12 36 13 18446744073709551615 3 ret 37 6 37 9 16 1 . 37 9 37 10 21 6 append 37 10 37 16 21 1 ( 37 16 37 17 21 1 1 37 17 37 18 18446744073709551615 1 , 37 18 37 19 21 2 ch 37 20 37 22 19 1 ) 37 22 37 23 21 1 ; 37 23 37 24 18446744073709551615 5 break 38 6 38 11 18446744073709551615 1 ; 38 11 38 12 18446744073709551615 1 } 39 4 39 5 18446744073709551615 1 } 40 3 40 4 18446744073709551615 6 return 41 3 41 9 18446744073709551615 3 ret 41 10 41 13 16 1 ; 41 13 41 14 18446744073709551615 1 } 42 2 42 3 18446744073709551615 12 OutputHelper 44 2 44 14 22 2 :: 44 14 44 16 22 12 OutputHelper 44 16 44 28 22 1 ( 44 28 44 29 22 1 ) 44 29 44 30 22 1 { 44 31 44 32 18446744073709551615 6 parent 45 3 45 9 23 1 = 45 10 45 11 18446744073709551615 7 nullptr 45 12 45 19 18446744073709551615 1 ; 45 19 45 20 18446744073709551615 8 addValue 46 3 46 11 24 1 ( 46 11 46 12 24 16 "KLACULATE_NAME" 46 12 46 28 18446744073709551615 1 , 46 28 46 29 24 14 KLACULATE_NAME 46 30 46 44 24 1 ) 46 44 46 45 24 1 ; 46 45 46 46 18446744073709551615 8 addValue 47 3 47 11 24 1 ( 47 11 47 12 24 19 "KLACULATE_VERSION" 47 12 47 31 18446744073709551615 1 , 47 31 47 32 24 17 KLACULATE_VERSION 47 33 47 50 24 1 ) 47 50 47 51 24 1 ; 47 51 47 52 18446744073709551615 1 } 48 2 48 3 18446744073709551615 12 OutputHelper 50 2 50 14 22 2 :: 50 14 50 16 22 12 OutputHelper 50 16 50 28 22 1 ( 50 28 50 29 22 5 const 50 29 50 34 18446744073709551615 12 OutputHelper 50 35 50 47 22 1 & 50 47 50 48 18446744073709551615 4 orig 50 49 50 53 25 1 ) 50 53 50 54 22 1 { 50 55 50 56 18446744073709551615 1 } 51 2 51 3 18446744073709551615 4 void 53 2 53 6 18446744073709551615 12 OutputHelper 53 7 53 19 22 2 :: 53 19 53 21 24 8 addValue 53 21 53 29 24 1 ( 53 29 53 30 24 5 const 53 30 53 35 18446744073709551615 4 char 53 36 53 40 18446744073709551615 1 * 53 41 53 42 18446744073709551615 4 name 53 42 53 46 26 1 , 53 46 53 47 24 5 const 53 48 53 53 18446744073709551615 4 char 53 54 53 58 18446744073709551615 1 * 53 59 53 60 18446744073709551615 5 value 53 60 53 65 27 1 ) 53 65 53 66 24 1 { 53 67 53 68 18446744073709551615 8 addValue 54 3 54 11 24 1 ( 54 11 54 12 24 3 std 54 12 54 15 2 2 :: 54 15 54 17 18446744073709551615 6 string 54 17 54 23 3 1 ( 54 23 54 24 28 4 name 54 24 54 28 26 1 ) 54 28 54 29 28 1 , 54 29 54 30 24 3 std 54 31 54 34 2 2 :: 54 34 54 36 18446744073709551615 6 string 54 36 54 42 3 1 ( 54 42 54 43 28 5 value 54 43 54 48 27 1 ) 54 48 54 49 28 1 ) 54 49 54 50 24 1 ; 54 50 54 51 18446744073709551615 1 } 55 2 55 3 18446744073709551615 4 void 57 2 57 6 18446744073709551615 12 OutputHelper 57 7 57 19 22 2 :: 57 19 57 21 24 8 addValue 57 21 57 29 24 1 ( 57 29 57 30 24 3 std 57 30 57 33 2 2 :: 57 33 57 35 18446744073709551615 6 string 57 35 57 41 3 4 name 57 42 57 46 29 1 , 57 46 57 47 24 3 std 57 48 57 51 2 2 :: 57 51 57 53 18446744073709551615 6 string 57 53 57 59 3 5 value 57 60 57 65 30 1 ) 57 65 57 66 24 1 { 57 67 57 68 18446744073709551615 3 try 58 3 58 6 18446744073709551615 1 { 58 7 58 8 18446744073709551615 6 values 59 4 59 10 31 1 . 59 10 59 11 32 5 erase 59 11 59 16 32 1 ( 59 16 59 17 32 4 name 59 17 59 21 29 1 ) 59 21 59 22 32 1 ; 59 22 59 23 18446744073709551615 1 } 60 3 60 4 18446744073709551615 5 catch 60 5 60 10 18446744073709551615 1 ( 60 11 60 12 18446744073709551615 5 const 60 12 60 17 18446744073709551615 3 std 60 18 60 21 2 2 :: 60 21 60 23 18446744073709551615 12 out_of_range 60 23 60 35 33 1 & 60 35 60 36 18446744073709551615 3 oor 60 37 60 40 34 1 ) 60 40 60 41 18446744073709551615 1 { 60 42 60 43 18446744073709551615 1 } 61 3 61 4 18446744073709551615 6 values 63 3 63 9 31 1 . 63 9 63 10 35 6 insert 63 10 63 16 35 1 ( 63 16 63 17 35 3 std 63 17 63 20 2 2 :: 63 20 63 22 36 4 pair 63 22 63 26 36 1 < 63 26 63 27 36 3 std 63 27 63 30 2 2 :: 63 30 63 32 36 6 string 63 32 63 38 3 1 , 63 38 63 39 36 3 std 63 40 63 43 2 2 :: 63 43 63 45 36 6 string 63 45 63 51 3 1 > 63 51 63 52 36 1 ( 63 52 63 53 36 4 name 63 53 63 57 29 1 , 63 57 63 58 36 5 value 63 59 63 64 30 1 ) 63 64 63 65 36 1 ) 63 65 63 66 35 1 ; 63 66 63 67 18446744073709551615 1 } 64 2 64 3 18446744073709551615 4 void 66 2 66 6 18446744073709551615 12 OutputHelper 66 7 66 19 22 2 :: 66 19 66 21 37 9 addValues 66 21 66 30 37 1 ( 66 30 66 31 37 3 std 66 31 66 34 2 2 :: 66 34 66 36 18446744073709551615 3 map 66 36 66 39 38 1 < 66 39 66 40 18446744073709551615 3 std 66 40 66 43 2 2 :: 66 43 66 45 18446744073709551615 6 string 66 45 66 51 3 1 , 66 51 66 52 18446744073709551615 3 std 66 53 66 56 2 2 :: 66 56 66 58 18446744073709551615 6 string 66 58 66 64 3 1 > 66 64 66 65 18446744073709551615 1 * 66 66 66 67 18446744073709551615 5 vlist 66 67 66 72 39 1 ) 66 72 66 73 37 1 { 66 74 66 75 18446744073709551615 3 for 67 3 67 6 18446744073709551615 1 ( 67 7 67 8 18446744073709551615 3 std 67 8 67 11 2 2 :: 67 11 67 13 18446744073709551615 4 pair 67 13 67 17 36 1 < 67 17 67 18 18446744073709551615 3 std 67 18 67 21 2 2 :: 67 21 67 23 18446744073709551615 6 string 67 23 67 29 3 1 , 67 29 67 30 18446744073709551615 3 std 67 31 67 34 2 2 :: 67 34 67 36 18446744073709551615 6 string 67 36 67 42 3 1 > 67 42 67 43 18446744073709551615 1 p 67 44 67 45 40 1 : 67 46 67 47 41 1 * 67 48 67 49 18446744073709551615 5 vlist 67 49 67 54 39 1 ) 67 54 67 55 18446744073709551615 1 { 67 56 67 57 18446744073709551615 8 addValue 68 4 68 12 24 1 ( 68 12 68 13 24 1 p 68 13 68 14 40 1 . 68 14 68 15 18446744073709551615 5 first 68 15 68 20 42 1 , 68 20 68 21 24 1 p 68 22 68 23 40 1 . 68 23 68 24 18446744073709551615 6 second 68 24 68 30 43 1 ) 68 30 68 31 24 1 ; 68 31 68 32 18446744073709551615 1 } 69 3 69 4 18446744073709551615 1 } 70 2 70 3 18446744073709551615 4 void 72 2 72 6 18446744073709551615 12 OutputHelper 72 7 72 19 22 2 :: 72 19 72 21 44 11 deleteValue 72 21 72 32 44 1 ( 72 32 72 33 44 5 const 72 33 72 38 18446744073709551615 4 char 72 39 72 43 18446744073709551615 1 * 72 43 72 44 18446744073709551615 4 name 72 45 72 49 45 1 ) 72 49 72 50 44 1 { 72 51 72 52 18446744073709551615 11 deleteValue 73 3 73 14 44 1 ( 73 14 73 15 44 3 std 73 15 73 18 2 2 :: 73 18 73 20 18446744073709551615 6 string 73 20 73 26 3 1 ( 73 26 73 27 28 4 name 73 27 73 31 45 1 ) 73 31 73 32 28 1 ) 73 32 73 33 44 1 ; 73 33 73 34 18446744073709551615 1 } 74 2 74 3 18446744073709551615 4 void 76 2 76 6 18446744073709551615 12 OutputHelper 76 7 76 19 22 2 :: 76 19 76 21 44 11 deleteValue 76 21 76 32 44 1 ( 76 32 76 33 44 3 std 76 33 76 36 2 2 :: 76 36 76 38 18446744073709551615 6 string 76 38 76 44 3 4 name 76 45 76 49 46 1 ) 76 49 76 50 44 1 { 76 51 76 52 18446744073709551615 3 try 77 3 77 6 18446744073709551615 1 { 77 7 77 8 18446744073709551615 6 values 78 4 78 10 31 1 . 78 10 78 11 32 5 erase 78 11 78 16 32 1 ( 78 16 78 17 32 4 name 78 17 78 21 46 1 ) 78 21 78 22 32 1 ; 78 22 78 23 18446744073709551615 1 } 79 3 79 4 18446744073709551615 5 catch 79 5 79 10 18446744073709551615 1 ( 79 11 79 12 18446744073709551615 5 const 79 12 79 17 18446744073709551615 3 std 79 18 79 21 2 2 :: 79 21 79 23 18446744073709551615 12 out_of_range 79 23 79 35 33 1 & 79 35 79 36 18446744073709551615 3 oor 79 37 79 40 47 1 ) 79 40 79 41 18446744073709551615 1 { 79 42 79 43 18446744073709551615 1 } 80 3 80 4 18446744073709551615 1 } 81 2 81 3 18446744073709551615 4 void 83 2 83 6 18446744073709551615 12 OutputHelper 83 7 83 19 22 2 :: 83 19 83 21 48 12 deleteValues 83 21 83 33 48 1 ( 83 33 83 34 48 3 std 83 34 83 37 2 2 :: 83 37 83 39 18446744073709551615 6 vector 83 39 83 45 49 1 < 83 45 83 46 18446744073709551615 3 std 83 46 83 49 2 2 :: 83 49 83 51 18446744073709551615 6 string 83 51 83 57 3 1 > 83 57 83 58 18446744073709551615 1 * 83 58 83 59 18446744073709551615 5 vlist 83 60 83 65 50 1 ) 83 65 83 66 48 1 { 83 67 83 68 18446744073709551615 3 for 84 3 84 6 18446744073709551615 1 ( 84 7 84 8 18446744073709551615 3 std 84 8 84 11 2 2 :: 84 11 84 13 18446744073709551615 6 string 84 13 84 19 3 1 s 84 20 84 21 51 1 : 84 22 84 23 20 1 * 84 24 84 25 18446744073709551615 5 vlist 84 25 84 30 50 1 ) 84 30 84 31 18446744073709551615 1 { 84 32 84 33 18446744073709551615 11 deleteValue 85 4 85 15 44 1 ( 85 15 85 16 44 1 s 85 16 85 17 51 1 ) 85 17 85 18 44 1 ; 85 18 85 19 18446744073709551615 1 } 86 3 86 4 18446744073709551615 1 } 87 2 87 3 18446744073709551615 4 void 89 2 89 6 18446744073709551615 12 OutputHelper 89 7 89 19 22 2 :: 89 19 89 21 52 11 clearValues 89 21 89 32 52 1 ( 89 32 89 33 52 1 ) 89 33 89 34 52 1 { 89 35 89 36 18446744073709551615 6 values 90 3 90 9 31 1 . 90 9 90 10 53 5 clear 90 10 90 15 53 1 ( 90 15 90 16 53 1 ) 90 16 90 17 53 1 ; 90 17 90 18 18446744073709551615 1 } 91 2 91 3 18446744073709551615 4 void 93 2 93 6 18446744073709551615 12 OutputHelper 93 7 93 19 22 2 :: 93 19 93 21 54 11 addTemplate 93 21 93 32 54 1 ( 93 32 93 33 54 5 const 93 33 93 38 18446744073709551615 4 char 93 39 93 43 18446744073709551615 1 * 93 43 93 44 18446744073709551615 7 tplfile 93 45 93 52 55 1 ) 93 52 93 53 54 1 { 93 54 93 55 18446744073709551615 11 addTemplate 94 3 94 14 54 1 ( 94 14 94 15 54 3 std 94 15 94 18 2 2 :: 94 18 94 20 18446744073709551615 6 string 94 20 94 26 3 1 ( 94 26 94 27 28 7 tplfile 94 27 94 34 55 1 ) 94 34 94 35 28 1 ) 94 35 94 36 54 1 ; 94 36 94 37 18446744073709551615 1 } 95 2 95 3 18446744073709551615 4 void 97 2 97 6 18446744073709551615 12 OutputHelper 97 7 97 19 22 2 :: 97 19 97 21 54 11 addTemplate 97 21 97 32 54 1 ( 97 32 97 33 54 3 std 97 33 97 36 2 2 :: 97 36 97 38 18446744073709551615 6 string 97 38 97 44 3 7 tplfile 97 45 97 52 56 1 ) 97 52 97 53 54 1 { 97 54 97 55 18446744073709551615 3 int 98 3 98 6 18446744073709551615 1 a 98 7 98 8 57 1 = 98 9 98 10 18446744073709551615 9 templates 98 11 98 20 58 1 . 98 20 98 21 59 4 size 98 21 98 25 59 1 ( 98 25 98 26 59 1 ) 98 26 98 27 59 1 ; 98 27 98 28 18446744073709551615 7 helpers 99 3 99 10 60 1 . 99 10 99 11 61 9 push_back 99 11 99 20 61 1 ( 99 20 99 21 61 7 nullptr 99 21 99 28 18446744073709551615 1 ) 99 28 99 29 61 1 ; 99 29 99 30 18446744073709551615 9 templates 100 3 100 12 58 1 . 100 12 100 13 61 9 push_back 100 13 100 22 61 1 ( 100 22 100 23 61 7 tplfile 100 23 100 30 56 1 ) 100 30 100 31 61 1 ; 100 31 100 32 18446744073709551615 3 int 102 3 102 6 18446744073709551615 1 b 102 7 102 8 62 1 = 102 9 102 10 18446744073709551615 6 stager 102 11 102 17 63 1 . 102 17 102 18 59 4 size 102 18 102 22 59 1 ( 102 22 102 23 59 1 ) 102 23 102 24 59 1 ; 102 24 102 25 18446744073709551615 6 stager 103 3 103 9 63 1 . 103 9 103 10 61 9 push_back 103 10 103 19 61 1 ( 103 19 103 20 61 1 b 103 20 103 21 62 1 ) 103 21 103 22 61 1 ; 103 22 103 23 18446744073709551615 1 } 104 2 104 3 18446744073709551615 4 void 106 2 106 6 18446744073709551615 12 OutputHelper 106 7 106 19 22 2 :: 106 19 106 21 64 9 addHelper 106 21 106 30 64 1 ( 106 30 106 31 64 12 OutputHelper 106 31 106 43 22 1 * 106 43 106 44 18446744073709551615 6 helper 106 45 106 51 65 1 ) 106 51 106 52 64 1 { 106 53 106 54 18446744073709551615 6 signed 107 3 107 9 18446744073709551615 3 int 107 10 107 13 18446744073709551615 1 a 107 14 107 15 66 1 = 107 16 107 17 18446744073709551615 1 ( 107 18 107 19 18446744073709551615 6 signed 107 19 107 25 18446744073709551615 3 int 107 26 107 29 18446744073709551615 1 ) 107 29 107 30 18446744073709551615 7 helpers 107 31 107 38 60 1 . 107 38 107 39 59 4 size 107 39 107 43 59 1 ( 107 43 107 44 59 1 ) 107 44 107 45 59 1 ; 107 45 107 46 18446744073709551615 7 helpers 108 3 108 10 60 1 . 108 10 108 11 61 9 push_back 108 11 108 20 61 1 ( 108 20 108 21 61 6 helper 108 21 108 27 65 1 ) 108 27 108 28 61 1 ; 108 28 108 29 18446744073709551615 9 templates 109 3 109 12 58 1 . 109 12 109 13 61 9 push_back 109 13 109 22 61 1 ( 109 22 109 23 61 12 "blank.html" 109 23 109 35 18446744073709551615 1 ) 109 35 109 36 61 1 ; 109 36 109 37 18446744073709551615 1 a 111 3 111 4 66 2 ++ 111 4 111 6 18446744073709551615 1 ; 111 6 111 7 18446744073709551615 1 a 112 3 112 4 66 2 *= 112 5 112 7 18446744073709551615 1 - 112 8 112 9 18446744073709551615 1 1 112 9 112 10 18446744073709551615 1 ; 112 10 112 11 18446744073709551615 3 int 113 3 113 6 18446744073709551615 1 b 113 7 113 8 67 1 = 113 9 113 10 18446744073709551615 6 stager 113 11 113 17 63 1 . 113 17 113 18 59 4 size 113 18 113 22 59 1 ( 113 22 113 23 59 1 ) 113 23 113 24 59 1 ; 113 24 113 25 18446744073709551615 6 stager 114 3 114 9 63 1 . 114 9 114 10 61 9 push_back 114 10 114 19 61 1 ( 114 19 114 20 61 1 a 114 20 114 21 66 1 ) 114 21 114 22 61 1 ; 114 22 114 23 18446744073709551615 1 } 115 2 115 3 18446744073709551615 4 bool 117 2 117 6 18446744073709551615 12 OutputHelper 117 7 117 19 22 2 :: 117 19 117 21 68 10 existValue 117 21 117 31 68 1 ( 117 31 117 32 68 3 std 117 32 117 35 2 2 :: 117 35 117 37 18446744073709551615 6 string 117 37 117 43 3 3 key 117 44 117 47 69 1 ) 117 47 117 48 68 1 { 117 49 117 50 18446744073709551615 3 std 118 3 118 6 2 2 :: 118 6 118 8 18446744073709551615 3 map 118 8 118 11 38 1 < 118 11 118 12 18446744073709551615 3 std 118 12 118 15 2 2 :: 118 15 118 17 18446744073709551615 6 string 118 17 118 23 3 1 , 118 23 118 24 18446744073709551615 3 std 118 25 118 28 2 2 :: 118 28 118 30 18446744073709551615 6 string 118 30 118 36 3 1 > 118 36 118 37 18446744073709551615 2 :: 118 37 118 39 18446744073709551615 8 iterator 118 39 118 47 70 2 it 118 48 118 50 71 1 = 118 51 118 52 18446744073709551615 6 values 118 53 118 59 31 1 . 118 59 118 60 72 4 find 118 60 118 64 72 1 ( 118 64 118 65 72 3 key 118 65 118 68 69 1 ) 118 68 118 69 72 1 ; 118 69 118 70 18446744073709551615 6 return 119 3 119 9 18446744073709551615 1 ! 119 10 119 11 18446744073709551615 1 ( 119 11 119 12 18446744073709551615 2 it 119 12 119 14 71 2 == 119 15 119 17 73 3 std 119 18 119 21 2 2 :: 119 21 119 23 74 3 end 119 23 119 26 74 1 ( 119 26 119 27 74 6 values 119 27 119 33 31 1 ) 119 33 119 34 74 1 ) 119 34 119 35 18446744073709551615 1 ; 119 35 119 36 18446744073709551615 1 } 120 2 120 3 18446744073709551615 3 std 122 2 122 5 2 2 :: 122 5 122 7 75 6 string 122 7 122 13 3 12 OutputHelper 122 14 122 26 22 2 :: 122 26 122 28 75 8 getValue 122 28 122 36 75 1 ( 122 36 122 37 75 3 std 122 37 122 40 2 2 :: 122 40 122 42 18446744073709551615 6 string 122 42 122 48 3 3 key 122 49 122 52 76 1 ) 122 52 122 53 75 1 { 122 54 122 55 18446744073709551615 6 return 123 3 123 9 18446744073709551615 10 existValue 123 10 123 20 68 1 ( 123 20 123 21 68 3 key 123 21 123 24 76 1 ) 123 24 123 25 68 1 ? 123 26 123 27 18446744073709551615 6 values 123 28 123 34 31 1 . 123 34 123 35 77 2 at 123 35 123 37 77 1 ( 123 37 123 38 77 3 key 123 38 123 41 76 1 ) 123 41 123 42 77 1 : 123 43 123 44 18446744073709551615 3 std 123 45 123 48 2 2 :: 123 48 123 50 28 6 string 123 50 123 56 3 1 ( 123 56 123 57 28 1 ) 123 57 123 58 28 1 ; 123 58 123 59 18446744073709551615 1 } 124 2 124 3 18446744073709551615 3 std 126 2 126 5 2 2 :: 126 5 126 7 78 6 string 126 7 126 13 3 12 OutputHelper 126 14 126 26 22 2 :: 126 26 126 28 78 9 getOutput 126 28 126 37 78 1 ( 126 37 126 38 78 1 ) 126 38 126 39 78 1 { 126 40 126 41 18446744073709551615 3 std 127 3 127 6 2 2 :: 127 6 127 8 18446744073709551615 12 stringstream 127 8 127 20 79 6 output 127 21 127 27 80 1 ; 127 27 127 28 18446744073709551615 3 std 129 3 129 6 2 2 :: 129 6 129 8 18446744073709551615 3 map 129 8 129 11 38 1 < 129 11 129 12 18446744073709551615 3 std 129 12 129 15 2 2 :: 129 15 129 17 18446744073709551615 6 string 129 17 129 23 3 1 , 129 23 129 24 18446744073709551615 3 std 129 25 129 28 2 2 :: 129 28 129 30 18446744073709551615 6 string 129 30 129 36 3 1 > 129 36 129 37 18446744073709551615 5 mdata 129 38 129 43 81 1 ; 129 43 129 44 18446744073709551615 2 if 130 3 130 5 18446744073709551615 1 ( 130 6 130 7 18446744073709551615 6 parent 130 7 130 13 23 2 != 130 14 130 16 18446744073709551615 7 nullptr 130 17 130 24 18446744073709551615 1 ) 130 24 130 25 18446744073709551615 1 { 130 26 130 27 18446744073709551615 3 for 131 4 131 7 18446744073709551615 1 ( 131 8 131 9 18446744073709551615 3 std 131 9 131 12 2 2 :: 131 12 131 14 18446744073709551615 4 pair 131 14 131 18 36 1 < 131 18 131 19 18446744073709551615 3 std 131 19 131 22 2 2 :: 131 22 131 24 18446744073709551615 6 string 131 24 131 30 3 1 , 131 30 131 31 18446744073709551615 3 std 131 32 131 35 2 2 :: 131 35 131 37 18446744073709551615 6 string 131 37 131 43 3 1 > 131 43 131 44 18446744073709551615 1 p 131 44 131 45 82 1 : 131 46 131 47 41 6 parent 131 48 131 54 23 2 -> 131 54 131 56 18446744073709551615 6 values 131 56 131 62 31 1 ) 131 62 131 63 18446744073709551615 1 { 131 64 131 65 18446744073709551615 5 mdata 132 5 132 10 81 1 . 132 10 132 11 35 6 insert 132 11 132 17 35 1 ( 132 17 132 18 35 1 p 132 18 132 19 82 1 ) 132 19 132 20 35 1 ; 132 20 132 21 18446744073709551615 1 } 133 4 133 5 18446744073709551615 1 } 134 3 134 4 18446744073709551615 5 // */ 134 5 134 10 18446744073709551615 3 for 135 3 135 6 18446744073709551615 1 ( 135 7 135 8 18446744073709551615 3 std 135 8 135 11 2 2 :: 135 11 135 13 18446744073709551615 4 pair 135 13 135 17 36 1 < 135 17 135 18 18446744073709551615 3 std 135 18 135 21 2 2 :: 135 21 135 23 18446744073709551615 6 string 135 23 135 29 3 1 , 135 29 135 30 18446744073709551615 3 std 135 31 135 34 2 2 :: 135 34 135 36 18446744073709551615 6 string 135 36 135 42 3 1 > 135 42 135 43 18446744073709551615 1 p 135 43 135 44 83 1 : 135 45 135 46 41 6 values 135 47 135 53 31 1 ) 135 53 135 54 18446744073709551615 1 { 135 55 135 56 18446744073709551615 5 mdata 136 4 136 9 81 1 . 136 9 136 10 35 6 insert 136 10 136 16 35 1 ( 136 16 136 17 35 1 p 136 17 136 18 83 1 ) 136 18 136 19 35 1 ; 136 19 136 20 18446744073709551615 1 } 137 3 137 4 18446744073709551615 6 signed 139 3 139 9 18446744073709551615 3 int 139 10 139 13 18446744073709551615 1 c 139 14 139 15 84 1 = 139 16 139 17 18446744073709551615 1 0 139 18 139 19 18446744073709551615 1 ; 139 19 139 20 18446744073709551615 3 int 140 3 140 6 18446744073709551615 3 max 140 7 140 10 85 1 = 140 11 140 12 18446744073709551615 6 stager 140 13 140 19 63 1 . 140 19 140 20 59 4 size 140 20 140 24 59 1 ( 140 24 140 25 59 1 ) 140 25 140 26 59 1 ; 140 26 140 27 18446744073709551615 3 for 141 3 141 6 18446744073709551615 1 ( 141 7 141 8 18446744073709551615 3 int 141 8 141 11 18446744073709551615 1 a 141 12 141 13 86 1 = 141 14 141 15 18446744073709551615 1 0 141 16 141 17 18446744073709551615 1 ; 141 17 141 18 18446744073709551615 1 a 141 19 141 20 86 1 < 141 21 141 22 18446744073709551615 3 max 141 23 141 26 85 1 ; 141 26 141 27 18446744073709551615 2 ++ 141 28 141 30 18446744073709551615 1 a 141 30 141 31 86 1 ) 141 31 141 32 18446744073709551615 1 { 141 33 141 34 18446744073709551615 1 c 142 4 142 5 84 1 = 142 6 142 7 18446744073709551615 6 stager 142 8 142 14 63 1 [ 142 14 142 15 87 1 a 142 15 142 16 86 1 ] 142 16 142 17 87 1 ; 142 17 142 18 18446744073709551615 2 if 143 4 143 6 18446744073709551615 1 ( 143 7 143 8 18446744073709551615 1 c 143 8 143 9 84 1 < 143 10 143 11 18446744073709551615 1 0 143 12 143 13 18446744073709551615 1 ) 143 13 143 14 18446744073709551615 1 { 143 15 143 16 18446744073709551615 9 // helper 143 17 143 26 18446744073709551615 1 c 144 5 144 6 84 2 *= 144 7 144 9 18446744073709551615 1 - 144 10 144 11 18446744073709551615 1 1 144 11 144 12 18446744073709551615 1 ; 144 12 144 13 18446744073709551615 1 c 145 5 145 6 84 2 -- 145 6 145 8 18446744073709551615 1 ; 145 8 145 9 18446744073709551615 6 output 146 5 146 11 80 2 << 146 12 146 14 88 7 helpers 146 15 146 22 60 1 [ 146 22 146 23 87 1 c 146 23 146 24 84 1 ] 146 24 146 25 87 2 -> 146 25 146 27 78 9 getOutput 146 27 146 36 78 1 ( 146 36 146 37 78 1 ) 146 37 146 38 78 1 ; 146 38 146 39 18446744073709551615 1 } 147 4 147 5 18446744073709551615 4 else 148 4 148 8 18446744073709551615 1 { 148 9 148 10 18446744073709551615 16 // template file 148 11 148 27 18446744073709551615 3 std 149 5 149 8 2 2 :: 149 8 149 10 18446744073709551615 6 string 149 10 149 16 3 7 tplfile 149 17 149 24 89 1 ( 149 24 149 25 28 9 templates 149 25 149 34 58 1 [ 149 34 149 35 87 1 c 149 35 149 36 84 1 ] 149 36 149 37 87 1 ) 149 37 149 38 28 1 ; 149 38 149 39 18446744073709551615 14 // check cache 151 5 151 19 18446744073709551615 3 std 152 5 152 8 2 2 :: 152 8 152 10 18446744073709551615 6 string 152 10 152 16 3 8 filename 152 17 152 25 90 1 ( 152 25 152 26 28 32 "/usr/home/klaculate/templates/" 152 26 152 58 18446744073709551615 1 ) 152 58 152 59 28 1 ; 152 59 152 60 18446744073709551615 8 filename 153 5 153 13 90 1 . 153 13 153 14 21 6 append 153 14 153 20 21 1 ( 153 20 153 21 21 7 tplfile 153 21 153 28 89 1 ) 153 28 153 29 21 1 ; 153 29 153 30 18446744073709551615 6 struct 154 5 154 11 18446744073709551615 4 stat 154 12 154 16 91 2 fs 154 17 154 19 92 1 ; 154 19 154 20 18446744073709551615 4 long 155 5 155 9 18446744073709551615 2 tm 155 10 155 12 93 1 = 155 13 155 14 18446744073709551615 1 0 155 15 155 16 18446744073709551615 1 ; 155 16 155 17 18446744073709551615 3 int 156 5 156 8 18446744073709551615 6 result 156 9 156 15 94 1 = 156 16 156 17 18446744073709551615 4 stat 156 18 156 22 95 1 ( 156 22 156 23 95 8 filename 156 23 156 31 90 1 . 156 31 156 32 96 5 c_str 156 32 156 37 96 1 ( 156 37 156 38 96 1 ) 156 38 156 39 96 1 , 156 39 156 40 95 1 & 156 41 156 42 18446744073709551615 2 fs 156 42 156 44 92 1 ) 156 44 156 45 95 1 ; 156 45 156 46 18446744073709551615 2 if 157 5 157 7 18446744073709551615 1 ( 157 8 157 9 18446744073709551615 6 result 157 9 157 15 94 2 == 157 16 157 18 18446744073709551615 1 0 157 19 157 20 18446744073709551615 1 ) 157 20 157 21 18446744073709551615 1 { 157 22 157 23 18446744073709551615 2 tm 158 6 158 8 93 1 = 158 9 158 10 18446744073709551615 2 fs 158 11 158 13 92 1 . 158 13 158 14 18446744073709551615 7 st_mtim 158 14 158 21 97 1 . 158 21 158 22 18446744073709551615 6 tv_sec 158 22 158 28 98 1 ; 158 28 158 29 18446744073709551615 1 } 159 5 159 6 18446744073709551615 10 tCacheData 161 5 161 15 99 1 * 161 15 161 16 18446744073709551615 4 test 161 17 161 21 100 1 = 161 22 161 23 18446744073709551615 7 nullptr 161 24 161 31 18446744073709551615 1 ; 161 31 161 32 18446744073709551615 2 if 162 5 162 7 18446744073709551615 1 ( 162 8 162 9 18446744073709551615 1 ! 162 9 162 10 18446744073709551615 13 templateCache 162 10 162 23 101 1 . 162 23 162 24 102 5 empty 162 24 162 29 102 1 ( 162 29 162 30 102 1 ) 162 30 162 31 102 1 ) 162 31 162 32 18446744073709551615 1 { 162 33 162 34 18446744073709551615 3 try 163 6 163 9 18446744073709551615 1 { 163 10 163 11 18446744073709551615 4 test 164 7 164 11 100 1 = 164 12 164 13 18446744073709551615 13 templateCache 164 14 164 27 101 1 . 164 27 164 28 77 2 at 164 28 164 30 77 1 ( 164 30 164 31 77 7 tplfile 164 31 164 38 89 1 ) 164 38 164 39 77 1 ; 164 39 164 40 18446744073709551615 1 } 165 6 165 7 18446744073709551615 5 catch 165 8 165 13 18446744073709551615 1 ( 165 14 165 15 18446744073709551615 3 std 165 15 165 18 2 2 :: 165 18 165 20 18446744073709551615 12 out_of_range 165 20 165 32 33 3 oor 165 33 165 36 103 1 ) 165 36 165 37 18446744073709551615 1 { 165 38 165 39 18446744073709551615 1 } 166 6 166 7 18446744073709551615 1 } 167 5 167 6 18446744073709551615 2 if 169 5 169 7 18446744073709551615 1 ( 169 8 169 9 18446744073709551615 4 test 169 9 169 13 100 2 == 169 14 169 16 18446744073709551615 7 nullptr 169 17 169 24 18446744073709551615 1 ) 169 24 169 25 18446744073709551615 1 { 169 26 169 27 18446744073709551615 13 // not cached 169 28 169 41 18446744073709551615 7 tcMutex 170 6 170 13 104 1 . 170 13 170 14 105 4 lock 170 14 170 18 105 1 ( 170 18 170 19 105 1 ) 170 19 170 20 105 1 ; 170 20 170 21 18446744073709551615 10 tCacheData 171 6 171 16 99 1 * 171 16 171 17 18446744073709551615 2 tc 171 18 171 20 106 1 = 171 21 171 22 18446744073709551615 3 new 171 23 171 26 18446744073709551615 10 tCacheData 171 27 171 37 99 1 { 171 37 171 38 18446744073709551615 2 tm 171 38 171 40 93 1 , 171 40 171 41 18446744073709551615 13 loadCacheData 171 42 171 55 107 1 ( 171 55 171 56 107 7 tplfile 171 56 171 63 89 1 ) 171 63 171 64 107 1 } 171 64 171 65 18446744073709551615 1 ; 171 65 171 66 18446744073709551615 13 templateCache 172 6 172 19 101 1 . 172 19 172 20 35 6 insert 172 20 172 26 35 1 ( 172 26 172 27 35 3 std 172 27 172 30 2 2 :: 172 30 172 32 36 4 pair 172 32 172 36 36 1 < 172 36 172 37 36 3 std 172 37 172 40 2 2 :: 172 40 172 42 36 6 string 172 42 172 48 3 1 , 172 48 172 49 36 10 tCacheData 172 50 172 60 99 1 * 172 60 172 61 36 1 > 172 61 172 62 36 1 ( 172 62 172 63 36 7 tplfile 172 63 172 70 89 1 , 172 70 172 71 36 2 tc 172 72 172 74 106 1 ) 172 74 172 75 36 1 ) 172 75 172 76 35 1 ; 172 76 172 77 18446744073709551615 7 tcMutex 173 6 173 13 104 1 . 173 13 173 14 108 6 unlock 173 14 173 20 108 1 ( 173 20 173 21 108 1 ) 173 21 173 22 108 1 ; 173 22 173 23 18446744073709551615 1 } 174 5 174 6 18446744073709551615 4 else 175 5 175 9 18446744073709551615 1 { 175 10 175 11 18446744073709551615 9 // cached 175 12 175 21 18446744073709551615 10 tCacheData 176 6 176 16 99 1 * 176 16 176 17 18446744073709551615 2 tc 176 18 176 20 109 1 ; 176 20 176 21 18446744073709551615 2 tc 177 6 177 8 109 1 = 177 9 177 10 18446744073709551615 13 templateCache 177 11 177 24 101 1 . 177 24 177 25 77 2 at 177 25 177 27 77 1 ( 177 27 177 28 77 7 tplfile 177 28 177 35 89 1 ) 177 35 177 36 77 1 ; 177 36 177 37 18446744073709551615 2 if 178 6 178 8 18446744073709551615 1 ( 178 9 178 10 18446744073709551615 2 tc 178 10 178 12 109 2 -> 178 12 178 14 18446744073709551615 6 tcTime 178 14 178 20 110 1 < 178 21 178 22 18446744073709551615 2 tm 178 23 178 25 93 1 ) 178 25 178 26 18446744073709551615 1 { 178 27 178 28 18446744073709551615 19 // file was updated 178 29 178 48 18446744073709551615 7 tcMutex 179 7 179 14 104 1 . 179 14 179 15 105 4 lock 179 15 179 19 105 1 ( 179 19 179 20 105 1 ) 179 20 179 21 105 1 ; 179 21 179 22 18446744073709551615 2 tc 180 7 180 9 109 2 -> 180 9 180 11 18446744073709551615 6 tcData 180 11 180 17 111 1 = 180 18 180 19 112 13 loadCacheData 180 20 180 33 107 1 ( 180 33 180 34 107 7 tplfile 180 34 180 41 89 1 ) 180 41 180 42 107 1 ; 180 42 180 43 18446744073709551615 2 tc 181 7 181 9 109 2 -> 181 9 181 11 18446744073709551615 6 tcTime 181 11 181 17 110 1 = 181 18 181 19 18446744073709551615 2 tm 181 20 181 22 93 1 ; 181 22 181 23 18446744073709551615 7 tcMutex 182 7 182 14 104 1 . 182 14 182 15 108 6 unlock 182 15 182 21 108 1 ( 182 21 182 22 108 1 ) 182 22 182 23 108 1 ; 182 23 182 24 18446744073709551615 1 } 183 6 183 7 18446744073709551615 1 } 184 5 184 6 18446744073709551615 22 // pre-checks comprete 186 5 186 27 18446744073709551615 10 tCacheData 187 5 187 15 99 1 * 187 15 187 16 18446744073709551615 2 tc 187 17 187 19 113 1 = 187 20 187 21 18446744073709551615 7 nullptr 187 22 187 29 18446744073709551615 1 ; 187 29 187 30 18446744073709551615 2 tc 188 5 188 7 113 1 = 188 8 188 9 18446744073709551615 13 templateCache 188 10 188 23 101 1 . 188 23 188 24 77 2 at 188 24 188 26 77 1 ( 188 26 188 27 77 7 tplfile 188 27 188 34 89 1 ) 188 34 188 35 77 1 ; 188 35 188 36 18446744073709551615 3 int 189 5 189 8 18446744073709551615 4 prev 189 9 189 13 114 1 = 189 14 189 15 18446744073709551615 1 0 189 16 189 17 18446744073709551615 1 ; 189 17 189 18 18446744073709551615 3 int 190 5 190 8 18446744073709551615 3 fnd 190 9 190 12 115 1 = 190 13 190 14 18446744073709551615 2 tc 190 15 190 17 113 2 -> 190 17 190 19 18446744073709551615 6 tcData 190 19 190 25 111 1 . 190 25 190 26 10 4 find 190 26 190 30 10 1 ( 190 30 190 31 10 3 "{" 190 31 190 34 18446744073709551615 1 ) 190 34 190 35 10 1 ; 190 35 190 36 18446744073709551615 2 if 191 5 191 7 18446744073709551615 1 ( 191 8 191 9 18446744073709551615 3 fnd 191 9 191 12 115 2 == 191 13 191 15 18446744073709551615 3 std 191 16 191 19 2 2 :: 191 19 191 21 18446744073709551615 6 string 191 21 191 27 3 2 :: 191 27 191 29 18446744073709551615 4 npos 191 29 191 33 11 1 ) 191 33 191 34 18446744073709551615 1 { 191 35 191 36 18446744073709551615 6 output 192 6 192 12 80 2 << 192 13 192 15 88 2 tc 192 16 192 18 113 2 -> 192 18 192 20 18446744073709551615 6 tcData 192 20 192 26 111 1 ; 192 26 192 27 18446744073709551615 1 } 193 5 193 6 18446744073709551615 4 else 194 5 194 9 18446744073709551615 1 { 194 10 194 11 18446744073709551615 3 std 195 6 195 9 2 2 :: 195 9 195 11 18446744073709551615 12 stringstream 195 11 195 23 79 4 tout 195 24 195 28 116 1 ; 195 28 195 29 18446744073709551615 5 while 196 6 196 11 18446744073709551615 1 ( 196 12 196 13 18446744073709551615 3 fnd 196 13 196 16 115 2 != 196 17 196 19 18446744073709551615 3 std 196 20 196 23 2 2 :: 196 23 196 25 18446744073709551615 6 string 196 25 196 31 3 2 :: 196 31 196 33 18446744073709551615 4 npos 196 33 196 37 11 1 ) 196 37 196 38 18446744073709551615 1 { 196 39 196 40 18446744073709551615 4 tout 197 7 197 11 116 2 << 197 12 197 14 88 2 tc 197 15 197 17 113 2 -> 197 17 197 19 18446744073709551615 6 tcData 197 19 197 25 111 1 . 197 25 197 26 117 6 substr 197 26 197 32 117 1 ( 197 32 197 33 117 4 prev 197 33 197 37 114 1 , 197 37 197 38 117 1 ( 197 39 197 40 18446744073709551615 3 fnd 197 40 197 43 115 1 - 197 44 197 45 18446744073709551615 4 prev 197 46 197 50 114 1 ) 197 50 197 51 18446744073709551615 1 ) 197 51 197 52 117 1 ; 197 52 197 53 18446744073709551615 4 prev 198 7 198 11 114 1 = 198 12 198 13 18446744073709551615 2 tc 198 14 198 16 113 2 -> 198 16 198 18 18446744073709551615 6 tcData 198 18 198 24 111 1 . 198 24 198 25 10 4 find 198 25 198 29 10 1 ( 198 29 198 30 10 3 "}" 198 30 198 33 18446744073709551615 1 , 198 33 198 34 10 3 fnd 198 35 198 38 115 1 ) 198 38 198 39 10 1 ; 198 39 198 40 18446744073709551615 3 fnd 199 7 199 10 115 2 ++ 199 10 199 12 18446744073709551615 1 ; 199 12 199 13 18446744073709551615 3 try 200 7 200 10 18446744073709551615 1 { 200 11 200 12 18446744073709551615 4 tout 201 8 201 12 116 2 << 201 13 201 15 88 5 mdata 201 16 201 21 81 1 . 201 21 201 22 77 2 at 201 22 201 24 77 1 ( 201 24 201 25 77 2 tc 201 25 201 27 113 2 -> 201 27 201 29 18446744073709551615 6 tcData 201 29 201 35 111 1 . 201 35 201 36 117 6 substr 201 36 201 42 117 1 ( 201 42 201 43 117 3 fnd 201 43 201 46 115 1 , 201 46 201 47 117 1 ( 201 48 201 49 18446744073709551615 4 prev 201 49 201 53 114 1 - 201 54 201 55 18446744073709551615 3 fnd 201 56 201 59 115 1 ) 201 59 201 60 18446744073709551615 1 ) 201 60 201 61 117 1 ) 201 61 201 62 77 1 ; 201 62 201 63 18446744073709551615 1 } 202 7 202 8 18446744073709551615 5 catch 202 9 202 14 18446744073709551615 1 ( 202 15 202 16 18446744073709551615 3 ... 202 16 202 19 18446744073709551615 1 ) 202 19 202 20 18446744073709551615 1 { 202 21 202 22 18446744073709551615 1 } 203 7 203 8 18446744073709551615 4 prev 204 7 204 11 114 2 ++ 204 11 204 13 18446744073709551615 1 ; 204 13 204 14 18446744073709551615 3 fnd 205 7 205 10 115 1 = 205 11 205 12 18446744073709551615 2 tc 205 13 205 15 113 2 -> 205 15 205 17 18446744073709551615 6 tcData 205 17 205 23 111 1 . 205 23 205 24 10 4 find 205 24 205 28 10 1 ( 205 28 205 29 10 3 "{" 205 29 205 32 18446744073709551615 1 , 205 32 205 33 10 4 prev 205 34 205 38 114 1 ) 205 38 205 39 10 1 ; 205 39 205 40 18446744073709551615 1 } 206 6 206 7 18446744073709551615 4 tout 207 6 207 10 116 2 << 207 11 207 13 88 2 tc 207 14 207 16 113 2 -> 207 16 207 18 18446744073709551615 6 tcData 207 18 207 24 111 1 . 207 24 207 25 117 6 substr 207 25 207 31 117 1 ( 207 31 207 32 117 4 prev 207 32 207 36 114 1 ) 207 36 207 37 117 1 ; 207 37 207 38 18446744073709551615 6 output 208 6 208 12 80 2 << 208 13 208 15 88 4 tout 208 16 208 20 116 1 . 208 20 208 21 118 3 str 208 21 208 24 118 1 ( 208 24 208 25 118 1 ) 208 25 208 26 118 1 ; 208 26 208 27 18446744073709551615 1 } 209 5 209 6 18446744073709551615 1 } 210 4 210 5 18446744073709551615 1 } 211 3 211 4 18446744073709551615 6 return 212 3 212 9 18446744073709551615 6 output 212 10 212 16 80 1 . 212 16 212 17 118 3 str 212 17 212 20 118 1 ( 212 20 212 21 118 1 ) 212 21 212 22 118 1 ; 212 22 212 23 18446744073709551615 1 } 213 2 213 3 18446744073709551615 12 OutputHelper 215 2 215 14 22 2 :: 215 14 215 16 18446744073709551615 1 ~ 215 16 215 17 18446744073709551615 12 OutputHelper 215 17 215 29 22 1 ( 215 29 215 30 18446744073709551615 1 ) 215 30 215 31 18446744073709551615 1 { 215 32 215 33 18446744073709551615 11 clearValues 216 3 216 14 52 1 ( 216 14 216 15 52 1 ) 216 15 216 16 52 1 ; 216 16 216 17 18446744073709551615 9 templates 217 3 217 12 58 1 . 217 12 217 13 119 5 clear 217 13 217 18 119 1 ( 217 18 217 19 119 1 ) 217 19 217 20 119 1 ; 217 20 217 21 18446744073709551615 7 helpers 218 3 218 10 60 1 . 218 10 218 11 119 5 clear 218 11 218 16 119 1 ( 218 16 218 17 119 1 ) 218 17 218 18 119 1 ; 218 18 218 19 18446744073709551615 6 stager 219 3 219 9 63 1 . 219 9 219 10 119 5 clear 219 10 219 15 119 1 ( 219 15 219 16 119 1 ) 219 16 219 17 119 1 ; 219 17 219 18 18446744073709551615 1 } 220 2 220 3 18446744073709551615 4 void 222 2 222 6 18446744073709551615 12 OutputHelper 222 7 222 19 22 2 :: 222 19 222 21 120 9 setParent 222 21 222 30 120 1 ( 222 30 222 31 120 12 OutputHelper 222 31 222 43 22 1 * 222 44 222 45 18446744073709551615 1 p 222 45 222 46 121 1 ) 222 46 222 47 120 1 { 222 48 222 49 18446744073709551615 6 parent 223 3 223 9 23 1 = 223 10 223 11 18446744073709551615 1 p 223 12 223 13 121 1 ; 223 13 223 14 18446744073709551615 1 } 224 2 224 3 18446744073709551615 3 std 226 2 226 5 2 2 :: 226 5 226 7 107 6 string 226 7 226 13 3 12 OutputHelper 226 14 226 26 22 2 :: 226 26 226 28 107 13 loadCacheData 226 28 226 41 107 1 ( 226 41 226 42 107 3 std 226 42 226 45 2 2 :: 226 45 226 47 18446744073709551615 6 string 226 47 226 53 3 5 fname 226 54 226 59 122 1 ) 226 59 226 60 107 1 { 226 61 226 62 18446744073709551615 3 std 227 3 227 6 2 2 :: 227 6 227 8 18446744073709551615 6 string 227 8 227 14 3 8 filename 227 15 227 23 123 1 ( 227 23 227 24 28 32 "/usr/home/klaculate/templates/" 227 24 227 56 18446744073709551615 1 ) 227 56 227 57 28 1 ; 227 57 227 58 18446744073709551615 8 filename 228 3 228 11 123 1 . 228 11 228 12 21 6 append 228 12 228 18 21 1 ( 228 18 228 19 21 5 fname 228 19 228 24 122 1 ) 228 24 228 25 21 1 ; 228 25 228 26 18446744073709551615 3 std 229 3 229 6 2 2 :: 229 6 229 8 18446744073709551615 8 ifstream 229 8 229 16 124 3 fin 229 17 229 20 125 1 ( 229 20 229 21 126 8 filename 229 21 229 29 123 1 ) 229 29 229 30 126 1 ; 229 30 229 31 18446744073709551615 3 std 230 3 230 6 2 2 :: 230 6 230 8 18446744073709551615 12 stringstream 230 8 230 20 79 4 data 230 21 230 25 127 1 ; 230 25 230 26 18446744073709551615 3 std 231 3 231 6 2 2 :: 231 6 231 8 18446744073709551615 6 string 231 8 231 14 3 2 pt 231 15 231 17 128 1 ; 231 17 231 18 18446744073709551615 5 while 233 3 233 8 18446744073709551615 1 ( 233 9 233 10 18446744073709551615 3 fin 233 10 233 13 125 1 . 233 13 233 14 129 4 good 233 14 233 18 129 1 ( 233 18 233 19 129 1 ) 233 19 233 20 129 1 ) 233 20 233 21 18446744073709551615 1 { 233 22 233 23 18446744073709551615 3 std 234 4 234 7 2 2 :: 234 7 234 9 130 7 getline 234 9 234 16 130 1 ( 234 16 234 17 130 3 fin 234 17 234 20 125 1 , 234 20 234 21 130 2 pt 234 22 234 24 128 1 , 234 24 234 25 130 4 '\n' 234 26 234 30 18446744073709551615 1 ) 234 30 234 31 130 1 ; 234 31 234 32 18446744073709551615 4 data 235 4 235 8 127 2 << 235 9 235 11 88 2 pt 235 12 235 14 128 2 << 235 15 235 17 88 4 "\n" 235 18 235 22 18446744073709551615 1 ; 235 22 235 23 18446744073709551615 2 pt 236 4 236 6 128 1 . 236 6 236 7 131 5 clear 236 7 236 12 131 1 ( 236 12 236 13 131 1 ) 236 13 236 14 131 1 ; 236 14 236 15 18446744073709551615 1 } 237 3 237 4 18446744073709551615 3 fin 238 3 238 6 125 1 . 238 6 238 7 132 5 close 238 7 238 12 132 1 ( 238 12 238 13 132 1 ) 238 13 238 14 132 1 ; 238 14 238 15 18446744073709551615 3 std 239 3 239 6 2 2 :: 239 6 239 8 18446744073709551615 6 string 239 8 239 14 3 3 out 239 15 239 18 133 1 = 239 19 239 20 18446744073709551615 4 data 239 21 239 25 127 1 . 239 25 239 26 118 3 str 239 26 239 29 118 1 ( 239 29 239 30 118 1 ) 239 30 239 31 118 1 ; 239 31 239 32 18446744073709551615 6 return 240 3 240 9 18446744073709551615 3 out 240 10 240 13 133 1 ; 240 13 240 14 18446744073709551615 1 } 241 2 241 3 18446744073709551615 1 } 242 1 242 2 18446744073709551615 0 0 134 0 0 0 22 0 0 1 2 0 4 util 8 1 2 0 15 replaceAll:util 22 1 2 0 3 std 20 1 2 0 14 string:__1:std 10 1 2 0 71 11:31:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 10 1 2 0 71 11:55:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 10 1 2 0 71 11:80:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 21 1 2 0 26 empty:basic_string:__1:std 20 1 2 0 6 size_t 9 1 2 0 71 15:10:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 21 1 2 0 25 find:basic_string:__1:std 9 1 2 0 25 npos:basic_string:__1:std 21 1 2 0 28 replace:basic_string:__1:std 21 1 2 0 27 length:basic_string:__1:std 8 1 2 0 16 html_escape:util 10 1 2 0 71 22:45:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 71 23:15:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 21 1 2 0 28 reserve:basic_string:__1:std 21 1 2 0 25 size:basic_string:__1:std 9 1 2 0 71 25:19:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 21 1 2 0 29 operator*:__wrap_iter:__1:std 21 1 2 0 27 append:basic_string:__1:std 4 1 2 0 17 OutputHelper:util 6 1 2 0 24 parent:OutputHelper:util 21 1 2 0 26 addValue:OutputHelper:util 10 1 2 0 71 50:49:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 10 1 2 0 71 53:42:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 10 1 2 0 71 53:60:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 24 1 2 0 20 basic_string:__1:std 10 1 2 0 71 57:42:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 10 1 2 0 71 57:60:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 6 1 2 0 24 values:OutputHelper:util 21 1 2 0 17 erase:map:__1:std 4 1 2 0 16 out_of_range:std 9 1 2 0 71 60:37:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 21 1 2 0 18 insert:map:__1:std 24 1 2 0 12 pair:__1:std 21 1 2 0 27 addValues:OutputHelper:util 31 1 2 0 11 map:__1:std 10 1 2 0 71 66:67:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 71 67:44:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 21 1 2 0 32 operator*:__map_iterator:__1:std 6 1 2 0 18 first:pair:__1:std 6 1 2 0 19 second:pair:__1:std 21 1 2 0 29 deleteValue:OutputHelper:util 10 1 2 0 71 72:45:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 10 1 2 0 71 76:45:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 71 79:37:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 21 1 2 0 30 deleteValues:OutputHelper:util 31 1 2 0 14 vector:__1:std 10 1 2 0 71 83:60:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 71 84:20:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 21 1 2 0 29 clearValues:OutputHelper:util 21 1 2 0 17 clear:map:__1:std 21 1 2 0 29 addTemplate:OutputHelper:util 10 1 2 0 71 93:45:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 10 1 2 0 71 97:45:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 70 98:7:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 6 1 2 0 27 templates:OutputHelper:util 21 1 2 0 19 size:vector:__1:std 6 1 2 0 25 helpers:OutputHelper:util 21 1 2 0 24 push_back:vector:__1:std 9 1 2 0 71 102:7:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 6 1 2 0 24 stager:OutputHelper:util 21 1 2 0 27 addHelper:OutputHelper:util 10 1 2 0 72 106:45:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 72 107:14:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 71 113:7:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 21 1 2 0 28 existValue:OutputHelper:util 10 1 2 0 72 117:44:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 20 1 2 0 20 iterator:map:__1:std 9 1 2 0 72 118:48:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 21 1 2 0 16 find:map:__1:std 8 1 2 0 18 operator==:__1:std 8 1 2 0 11 end:__1:std 21 1 2 0 26 getValue:OutputHelper:util 10 1 2 0 72 122:49:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 21 1 2 0 14 at:map:__1:std 21 1 2 0 27 getOutput:OutputHelper:util 20 1 2 0 20 stringstream:__1:std 9 1 2 0 72 127:21:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 72 129:38:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 72 131:44:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 72 135:43:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 72 139:14:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 71 140:7:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 72 141:12:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 21 1 2 0 25 operator[]:vector:__1:std 8 1 2 0 16 operator:__1:std 9 1 2 0 72 149:17:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 72 152:17:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 2 1 2 0 4 stat 9 1 2 0 72 154:17:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 72 155:10:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 71 156:9:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 8 1 2 0 4 stat 21 1 2 0 26 c_str:basic_string:__1:std 6 1 2 0 12 st_mtim:stat 6 1 2 0 15 tv_sec:timespec 2 1 2 0 15 tCacheData:util 9 1 2 0 72 161:17:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 18 templateCache:util 21 1 2 0 17 empty:map:__1:std 9 1 2 0 72 165:33:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 12 tcMutex:util 21 1 2 0 18 lock:mutex:__1:std 9 1 2 0 72 171:18:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 21 1 2 0 31 loadCacheData:OutputHelper:util 21 1 2 0 20 unlock:mutex:__1:std 9 1 2 0 72 176:18:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 6 1 2 0 22 tcTime:tCacheData:util 6 1 2 0 22 tcData:tCacheData:util 21 1 2 0 30 operator=:basic_string:__1:std 9 1 2 0 72 187:17:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 71 189:9:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 71 190:9:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 72 195:24:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 21 1 2 0 27 substr:basic_string:__1:std 21 1 2 0 30 str:basic_stringstream:__1:std 21 1 2 0 20 clear:vector:__1:std 21 1 2 0 27 setParent:OutputHelper:util 10 1 2 0 72 222:45:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 10 1 2 0 72 226:54:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 72 227:15:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 20 1 2 0 16 ifstream:__1:std 9 1 2 0 72 229:17:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 24 1 2 0 22 basic_ifstream:__1:std 9 1 2 0 72 230:21:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 9 1 2 0 72 231:15:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 21 1 2 0 22 good:basic_ios:__1:std 8 1 2 0 15 getline:__1:std 21 1 2 0 26 clear:basic_string:__1:std 21 1 2 0 28 close:basic_ifstream:__1:std 9 1 2 0 72 239:15:/usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 0 0 3 0 0 0 55 /usr/home/jlhawkwell/Projects/klaculate/src/klaculate.h 1629620449 65 /usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.cpp 1629619095 63 /usr/home/jlhawkwell/Projects/klaculate/src/util/OutputHelper.h 1629618856